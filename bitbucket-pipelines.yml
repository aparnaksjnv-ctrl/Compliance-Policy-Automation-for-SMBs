# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.

image: atlassian/default-image:3

pipelines:
  default:
    - step:
        name: Week1 - Build & Test
        caches:
          - node
        script:
          - echo "Starting Week1 CI"
          - cd week1
          - node --version
          - npm --version
          - npm ci || npm install
          - npm test -- --run || echo "No tests configured"
          - npm run build
    - step:
        name: Week2 - Build
        caches:
          - node
        script:
          - echo "Week2 frontend CI"
          - cd week2
          - node --version
          - npm --version
          - npm ci || npm install
          - npm run build
    - step:
        name: Week1 API - Build & Test
        caches:
          - node
        script:
          - echo "Backend CI"
          - cd week1-api
          - node --version
          - npm --version
          - npm ci || npm install
          - npm test -- --run || echo "No backend tests configured"
          - npm run build
    - step:
        name: Week2 API - Build
        caches:
          - node
        script:
          - echo "Week2 API CI"
          - cd week2-api
          - node --version
          - npm --version
          - npm ci || npm install
          - npm run build

  branches:
    main:
      - step:
          name: Main - Week1 Build & Test
          caches:
            - node
          script:
            - echo "Main branch CI for Week1"
            - cd week1
            - node --version
            - npm --version
            - npm ci || npm install
            - npm test -- --run || echo "No tests configured"
            - npm run build
      - step:
          name: Main - Week2 Build
          caches:
            - node
          script:
            - echo "Main branch CI for Week2 frontend"
            - cd week2
            - node --version
            - npm --version
            - npm ci || npm install
            - npm run build
      - step:
          name: Main - Week1 API Build & Test
          caches:
            - node
          script:
            - echo "Main branch CI for Week1 API"
            - cd week1-api
            - node --version
            - npm --version
            - npm ci || npm install
            - npm test -- --run || echo "No backend tests configured"
            - npm run build
      - step:
          name: Main - Week2 API Build
          deployment: Production
          caches:
            - node
          script:
            - echo "Main branch CI for Week2 API"
            - cd week2-api
            - node --version
            - npm --version
            - npm ci || npm install
            - npm run build

    dev:
      - step:
          name: Dev - Frontend Build
          caches:
            - node
          script:
            - echo Dev_frontend_build
            - cd week2
            - node --version
            - npm --version
            - npm ci || npm install
            - npm run build
      - step:
          name: Dev - API Build
          deployment: Dev
          caches:
            - node
          script:
            - echo Dev_API_build
            - cd week2-api
            - node --version
            - npm --version
            - npm ci || npm install
            - npm run build

    uat:
      - step:
          name: UAT - Frontend Build
          caches:
            - node
          script:
            - echo UAT_frontend_build
            - cd week2
            - node --version
            - npm --version
            - npm ci || npm install
            - npm run build
      - step:
          name: UAT - API Build
          deployment: UAT
          caches:
            - node
          script:
            - echo UAT_API_build
            - cd week2-api
            - node --version
            - npm --version
            - npm ci || npm install
            - npm run build

    production:
      - step:
          name: Production - Frontend Build
          caches:
            - node
          script:
            - echo Production_frontend_build
            - cd week2
            - node --version
            - npm --version
            - npm ci || npm install
            - npm run build
      - step:
          name: Production - API Build
          deployment: Production
          caches:
            - node
          script:
            - echo Production_API_build
            - cd week2-api
            - node --version
            - npm --version
            - npm ci || npm install
            - npm run build


